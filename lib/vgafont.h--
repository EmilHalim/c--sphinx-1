/*
    SPHINX Programming (C) 1995.
    TITLE:  VGAFONT.H--
    DESCRIPTION:  This file contain support for a 5x5 pixel font for VGA
		  mode 19.
		  All routines take a standard ASCII character or string,
		  but only values 32 through 128 inclusive are supported.
    LAST MODIFIED:  16 May 1995
    PROCEDURES DEFINED IN THIS FILE:
	: void _over5x5letter19(x,y,letter,byte colour);
	: void over5x5letter19(x,y,letter,byte colour);
	: void _over5x5str19(x,y,straddr,byte colour);
	: void over5x5str19(x,y,straddr,byte colour);
	: void _put5x5letter19(x,y,letter,byte fg,byte bg);
	: void put5x5letter19(x,y,letter,byte fg,byte bg);
	: void _put5x5str19(x,y,straddr,byte fg,byte bg);
	: void put5x5str19(x,y,straddr,byte fg,byte bg);
*/
?ifndef _VGAFONT_
?define _VGAFONT_ TRUE
?warning FALSE

// 5x5 horizontally flipped character set from ' ' to 'z'.
// lower case letters supplied by Joel Hardy, some are ugly, but at least
// they are there!  :-)

:byte font_5x5 ={0b00000,0b00000,0b00000,0b00000,0b00000,
		0b00100,0b00100,0b00100,0b00000,0b00100,	//!
		0b01010,0b01010,0b00000,0b00000,0b00000,	//"
		0b01010,0b11111,0b01010,0b11111,0b01010,	//#
		0b01111,0b10100,0b11111,0b00101,0b11110,	//$
		0b10001,0b00010,0b00100,0b01000,0b10001,	//%
		0b00110,0b01010,0b10100,0b10011,0b01111,	//&
		0b00010,0b00100,0b00000,0b00000,0b00000,	//'
		0b00010,0b00100,0b00100,0b00100,0b00010,	//(
		0b00100,0b00010,0b00010,0b00010,0b00100,	//)
		0b01001,0b00110,0b01111,0b00110,0b01001,	//*
		0b00100,0b00100,0b11111,0b00100,0b00100,	//+
		0b00000,0b00000,0b00000,0b00010,0b00100,	//,
		0b00000,0b00000,0b11111,0b00000,0b00000,	//-
		0b00000,0b00000,0b00000,0b00000,0b00100,	//.
		0b00001,0b00010,0b00100,0b01000,0b10000,	///
		0b01110,0b10011,0b10101,0b11001,0b01110,	//0
		0b00100,0b01100,0b00100,0b00100,0b01110,	//1
		0b11111,0b00001,0b11111,0b10000,0b11111,	//2
		0b11111,0b00001,0b00111,0b00001,0b11111,	//3
		0b00010,0b00110,0b01010,0b11111,0b00010,	//4
		0b11111,0b10000,0b11110,0b00001,0b11110,	//5
		0b11111,0b10000,0b11111,0b10001,0b11111,	//6
		0b11111,0b00001,0b00010,0b00100,0b00100,	//7
		0b11111,0b10001,0b11111,0b10001,0b11111,	//8
		0b11111,0b10001,0b11111,0b00001,0b11111,	//9
		0b00000,0b00010,0b00000,0b00010,0b00000,	//:
		0b00000,0b00010,0b00000,0b00010,0b00100,	//;
		0b00010,0b00100,0b01000,0b00100,0b00010,	//<
		0b00000,0b01111,0b00000,0b01111,0b00000,	//=
		0b01000,0b00100,0b00010,0b00100,0b01000,	//>
		0b00110,0b01001,0b00010,0b00000,0b00010,	//?
		0b11111,0b10001,0b10011,0b10000,0b11111,	//@
		0b00100,0b01010,0b10001,0b11111,0b10001,	//A
		0b11110,0b10001,0b11110,0b10001,0b11110,	//B
		0b01110,0b10001,0b10000,0b10001,0b01110,	//C
		0b11110,0b10001,0b10001,0b10001,0b11110,	//D
		0b11111,0b10000,0b11100,0b10000,0b11111,	//E
		0b11111,0b10000,0b11100,0b10000,0b10000,	//F
		0b01110,0b10000,0b10011,0b10001,0b01110,	//G
		0b10001,0b10001,0b11111,0b10001,0b10001,	//H
		0b01110,0b00100,0b00100,0b00100,0b01110,	//I
		0b11111,0b00010,0b00010,0b10010,0b01100,	//J
		0b10001,0b10110,0b11100,0b10010,0b10001,	//K
		0b10000,0b10000,0b10000,0b10000,0b11111,	//L
		0b10001,0b11011,0b10101,0b10001,0b10001,	//M
		0b10001,0b11001,0b10101,0b10011,0b10001,	//N
		0b01110,0b10001,0b10001,0b10001,0b01110,  //O
		0b11110,0b10001,0b11110,0b10000,0b10000,	//P
		0b01110,0b10001,0b10101,0b10010,0b01101,	//Q
		0b11110,0b10001,0b11111,0b10010,0b10001,	//R
		0b01111,0b10000,0b01110,0b00001,0b11110,	//S
		0b11111,0b00100,0b00100,0b00100,0b00100,	//T
		0b10001,0b10001,0b10001,0b10001,0b01110,	//U
		0b10001,0b01010,0b01010,0b00100,0b00100,	//V
		0b10001,0b10001,0b10101,0b11011,0b10001,	//W
		0b10001,0b01010,0b00100,0b01010,0b10001,	//X
		0b10001,0b01010,0b00100,0b00100,0b00100,	//Y
		0b11111,0b00010,0b00100,0b01000,0b11111,	//Z
		0b01110,0b01000,0b01000,0b01000,0b01110,	//[
		0b10000,0b01000,0b00100,0b00010,0b00001,	//\
		0b00111,0b00001,0b00001,0b00001,0b00111,	//]
		0b00100,0b01010,0b10001,0b00000,0b00000,	//^
		0b00000,0b00000,0b00000,0b00000,0b11111,  //_
		0b00100,0b00010,0b00000,0b00000,0b00000,  //`
		0b00100,0b01010,0b10001,0b11111,0b10001,  //a
		0b11110,0b10001,0b11110,0b10001,0b11110,  //b
		0b01110,0b10001,0b10000,0b10001,0b01110,  //c
		0b11110,0b10001,0b10001,0b10001,0b11110,  //d
		0b11111,0b10000,0b11100,0b10000,0b11111,  //e
		0b11111,0b10000,0b11100,0b10000,0b10000,  //f
		0b01110,0b10000,0b10011,0b10001,0b01110,  //g
		0b10001,0b10001,0b11111,0b10001,0b10001,  //h
		0b01110,0b00100,0b00100,0b00100,0b01110,  //i
		0b11111,0b00010,0b00010,0b10010,0b01100,  //j
		0b10001,0b10110,0b11100,0b10010,0b10001,  //k
		0b10000,0b10000,0b10000,0b10000,0b11111,  //l
		0b10001,0b11011,0b10101,0b10001,0b10001,  //m
		0b10001,0b11001,0b10101,0b10011,0b10001,  //n
		0b01110,0b10001,0b10001,0b10001,0b01110,  //o
		0b11110,0b10001,0b11110,0b10000,0b10000,  //p
		0b01110,0b10001,0b10101,0b10010,0b01101,  //q
		0b11110,0b10001,0b11111,0b10010,0b10001,  //r
		0b01111,0b10000,0b01110,0b00001,0b11110,  //s
		0b11111,0b00100,0b00100,0b00100,0b00100,  //t
		0b10001,0b10001,0b10001,0b10001,0b01110,  //u
		0b10001,0b01010,0b01010,0b00100,0b00100,  //v
		0b10001,0b10001,0b10101,0b11011,0b10001,  //w
		0b10001,0b01010,0b00100,0b01010,0b10001,  //x
		0b10001,0b01010,0b00100,0b00100,0b00100,  //y
		0b11111,0b00010,0b00100,0b01000,0b11111,  //z
		0b00110,0b00100,0b01000,0b00100,0b00110,  //{
		0b00100,0b00100,0b00000,0b00100,0b00100,  //|
		0b00110,0b00010,0b00001,0b00010,0b00110,  //}
		0b01010,0b10100,0b00000,0b00000,0b00000,  //~
		0b00100,0b01010,0b10001,0b10001,0b11111,  //
		0b00100,0b01010,0b10001,0b11111,0b10001,	//A
		0b11111,0b10000,0b11110,0b10001,0b11110,  //Å
		0b11100,0b10010,0b11110,0b10001,0b11110,  //Ç
		0b11111,0b01001,0b01000,0b01000,0b11100,  //É
		0b00011,0b00101,0b01001,0b10001,0b11111,  //Ñ
		0b11110,0b10000,0b11100,0b10000,0b11111,  //Ö
		0b10101,0b01110,0b00100,0b01110,0b10101,  //Ü
		0b01110,0b10001,0b00010,0b10001,0b01110,  //á
		0b10001,0b10011,0b10101,0b11001,0b10001,  //à
		0b10101,0b10011,0b10101,0b11001,0b10001,  //â
		0b10001,0b10110,0b11100,0b10010,0b10001,	//K
		0b00111,0b01001,0b10001,0b10001,0b10001,  //ã
		0b10001,0b11011,0b10101,0b10001,0b10001,	//M
		0b10001,0b10001,0b11111,0b10001,0b10001,	//H
		0b01110,0b10001,0b10001,0b10001,0b01110,  //O
		0b11111,0b10001,0b10001,0b10001,0b10001,  //è
		0b11110,0b10001,0b11110,0b10000,0b10000,	//P
		0b01110,0b10001,0b10000,0b10001,0b01110,	//C
		0b11111,0b00100,0b00100,0b00100,0b00100,	//T
		0b10001,0b01001,0b00111,0b10001,0b01110,  //ì
		0b11111,0b10101,0b11111,0b00100,0b00100,  //î
		0b10001,0b01010,0b00100,0b01010,0b10001,	//X
		0b10010,0b10010,0b10010,0b10010,0b11111,  //ñ
		0b10001,0b10001,0b01111,0b00001,0b00001,  //ó
		0b10101,0b10101,0b10101,0b10101,0b11111,  //ò
		0b10101,0b10101,0b10101,0b11111,0b00001,  //ô
		0b11000,0b01000,0b01110,0b01001,0b01110,  //ö
		0b10001,0b10001,0b11101,0b10011,0b11101,  //õ
		0b10000,0b10000,0b11110,0b10001,0b11110,  //ú
		0B01110,0B10001,0B00111,0B10001,0B01110,  //ù
		0B10110,0B11001,0B11001,0B11001,0B10110,  //û
		0B01111,0B10001,0B01111,0B01001,0B10001,  //ü
		0b00100,0b01010,0b10001,0b11111,0b10001,	//†
		0b11111,0b10000,0b11110,0b10001,0b11110,  //°
		0b11100,0b10010,0b11110,0b10001,0b11110,  //¢
		0b11111,0b01001,0b01000,0b01000,0b11100,  //£
		0b00011,0b00101,0b01001,0b10001,0b11111,  //§
		0b11110,0b10000,0b11100,0b10000,0b11111,  //•
		0b10101,0b01110,0b00100,0b01110,0b10101,  //¶
		0b01110,0b10001,0b00010,0b10001,0b01110,  //ß
		0b10001,0b10011,0b10101,0b11001,0b10001,  //®
		0b10101,0b10011,0b10101,0b11001,0b10001,  //©
		0b10001,0b10110,0b11100,0b10010,0b10001,	//™
		0b00111,0b01001,0b10001,0b10001,0b10001,  //´
		0b10001,0b11011,0b10101,0b10001,0b10001,	//¨
		0b10001,0b10001,0b11111,0b10001,0b10001,	//≠
		0b01110,0b10001,0b10001,0b10001,0b01110,  //Æ
		0b11111,0b10001,0b10001,0b10001,0b10001,  //Ø
		0b01001,0b10010,0b01001,0b10010,0b01001,
		0b01010,0b10101,0b01010,0b10101,0b01010,
		0b10110,0b01101,0b10110,0b01101,0b10110,
		0b00100,0b00100,0b00100,0b00100,0b00100,
		0b00100,0b00100,0b11100,0b00100,0b00100,
		0b00100,0b11100,0b00100,0b11100,0b00100,
		0b01010,0b01010,0b11010,0b01010,0b01010,
		0b00000,0b00000,0b11110,0b01010,0b01010,
		0b00000,0b11110,0b01010,0b11010,0b01010,
		0b01010,0b11010,0b01010,0b11010,0b01010,
		0b01010,0b01010,0b01010,0b01010,0b01010,
		0b00000,0b11110,0b00010,0b11010,0b01010,
		0b01010,0b11010,0b00010,0b11110,0b00000,
		0b01010,0b01010,0b11110,0b00000,0b00000,
		0b00100,0b11100,0b00100,0b11100,0b00000,
		0b00000,0b00000,0b11100,0b00100,0b00100,
		0b00100,0b00100,0b00111,0b00000,0b00000,
		0b00100,0b00100,0b11111,0b00000,0b00000,
		0b00000,0b00000,0b11111,0b00100,0b00100,
		0b00100,0b00100,0b00111,0b00100,0b00100,
		0b00000,0b00000,0b11111,0b00000,0b00000,
		0b00100,0b00100,0b11111,0b00100,0b00100,
		0b00100,0b00111,0b00100,0b00111,0b00100,
		0b01010,0b01010,0b01011,0b01010,0b01010,
		0b01010,0b01011,0b01000,0b01111,0b00000,
		0b00000,0b01111,0b01000,0b01011,0b01010,
		0b01010,0b11011,0b00000,0b11111,0b00000,
		0b00000,0b11111,0b00000,0b11011,0b01010,
		0b01010,0b01011,0b01000,0b01011,0b01010,
		0b00000,0b11111,0b00000,0b11111,0b00000,
		0b01010,0b11011,0b00000,0b11011,0b01010,
		0b00100,0b11111,0b00000,0b11111,0b00000,
		0b01010,0b01010,0b11111,0b00000,0b00000,
		0b00000,0b11111,0b00000,0b11111,0b00100,
		0b00000,0b00000,0b11111,0b01010,0b01010,
		0b01010,0b01010,0b11111,0b00000,0b00000,
		0b00100,0b00111,0b00100,0b00111,0b00000,
		0b00000,0b00111,0b00100,0b00111,0b00100,
		0b00000,0b00000,0b01111,0b01010,0b01010,
		0b01010,0b01010,0b11111,0b01010,0b01010,
		0b00100,0b11111,0b00100,0b11111,0b00100,
		0b00100,0b00100,0b11100,0b00000,0b00000,
		0b00000,0b00000,0b00111,0b00100,0b00100,
		0b11111,0b11111,0b11111,0b11111,0b11111,
		0b00000,0b00000,0b11111,0b11111,0b11111,
		0b11100,0b11100,0b11100,0b11100,0b11100,
		0b00111,0b00111,0b00111,0b00111,0b00111,
		0b11111,0b11111,0b11111,0b00000,0b00000,
		0b11110,0b10001,0b11110,0b10000,0b10000,	//‡
		0b01110,0b10001,0b10000,0b10001,0b01110,	//·
		0b11111,0b00100,0b00100,0b00100,0b00100,	//‚
		0b10001,0b01001,0b00111,0b10001,0b01110,  //„
		0b11111,0b10101,0b11111,0b00100,0b00100,  //‰
		0b10001,0b01010,0b00100,0b01010,0b10001,	//Â
		0b10010,0b10010,0b10010,0b10010,0b11111,  //Ê
		0b10001,0b10001,0b01111,0b00001,0b00001,  //Á
		0b10101,0b10101,0b10101,0b10101,0b11111,  //Ë
		0b10101,0b10101,0b10101,0b11111,0b00001,  //È
		0b11000,0b01000,0b01110,0b01001,0b01110,  //Í
		0b10001,0b10001,0b11101,0b10011,0b11101,  //Î
		0b10000,0b10000,0b11110,0b10001,0b11110,  //Ï
		0b01110,0b10001,0b00111,0b10001,0b01110,  //Ì
		0b10110,0b11001,0b11001,0b11001,0b10110,  //Ó
		0b01111,0b10001,0b01111,0b01001,0b10001   //Ô
};

:void _put5x5letter19(word x,y;byte letter,fgcolor,bgcolor)
{
	AX=y*320+x;
	DI><AX;
	BH=fgcolor;
	BL=bgcolor;
	AX=letter-32*5+#font_5x5;
	SI><AX;
	AH=5;
	loop(AH){
		$LODSB
		CL=BL;
		$TEST AL,16
		$JZ DOWN16
		CL=BH;
DOWN16:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,8
		$JZ DOWN8
		CL=BH;
DOWN8:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,4
		$JZ DOWN4
		CL=BH;
DOWN4:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,2
		$JZ DOWN2
		CL=BH;
DOWN2:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,1
		$JZ DOWN1
		CL=BH;
DOWN1:
		ESBYTE[DI]=CL;
		DI++;
		ESBYTE[DI]=BL;
		DI+=320-5;
	}
}

:void put5x5letter19(word x,y;byte letter,fgcolor,bgcolor)
{
	ES=0xA000;
	AX=y*320+x;
	DI><AX;
	BH=fgcolor;
	BL=bgcolor;
	AX=letter-32*5+#font_5x5;
	SI><AX;
	AH=5;
	loop(AH){
		$LODSB
		CL=BL;
		$TEST AL,16
		$JZ DOWN16
		CL=BH;
DOWN16:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,8
		$JZ DOWN8
		CL=BH;
DOWN8:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,4
		$JZ DOWN4
		CL=BH;
DOWN4:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,2
		$JZ DOWN2
		CL=BH;
DOWN2:
		ESBYTE[DI]=CL;
		DI++;
		CL=BL;
		$TEST AL,1
		$JZ DOWN1
		CL=BH;
DOWN1:
		ESBYTE[DI]=CL;
		DI++;
		ESBYTE[DI]=BL;
		DI+=320-5;
	}
}

:void _over5x5letter19(word x,y;byte letter,color)
{
	AX=y*320+x;
	DI><AX;
	BH=color;
	AX=letter-32*5+#font_5x5;
	SI><AX;
	AH=5;
	loop(AH){
		$LODSB
		$TEST AL,16
		$JZ DOWN16
		ESBYTE[DI]=BH;
DOWN16:
		DI++;
		$TEST AL,8
		$JZ DOWN8
		ESBYTE[DI]=BH;
DOWN8:
		DI++;
		$TEST AL,4
		$JZ DOWN4
		ESBYTE[DI]=BH;
DOWN4:
		DI++;
		$TEST AL,2
		$JZ DOWN2
		ESBYTE[DI]=BH;
DOWN2:
		DI++;
		$TEST AL,1
		$JZ DOWN1
		ESBYTE[DI]=BH;
DOWN1:
		DI+=320-4;
	}
}

:void over5x5letter19(word x,y;byte letter,color)
{
	ES=0xA000;
	AX=y*320+x;
	DI><AX;
	BH=color;
	AX=letter-32*5+#font_5x5;
	SI><AX;
	AH=5;
	loop(AH){
		$LODSB
		$TEST AL,16
		$JZ DOWN16
		ESBYTE[DI]=BH;
DOWN16:
		DI++;
		$TEST AL,8
		$JZ DOWN8
		ESBYTE[DI]=BH;
DOWN8:
		DI++;
		$TEST AL,4
		$JZ DOWN4
		ESBYTE[DI]=BH;
DOWN4:
		DI++;
		$TEST AL,2
		$JZ DOWN2
		ESBYTE[DI]=BH;
DOWN2:
		DI++;
		$TEST AL,1
		$JZ DOWN1
		ESBYTE[DI]=BH;
DOWN1:
		DI+=320-4;
	}
}

:void _put5x5str19(word x,y,straddr;byte fgcolor,bgcolor)
{
	AX=y*320+x;
	DI><AX;
	BH=fgcolor;
	BL=bgcolor;
	$PUSH BP
	BP=straddr;
	loop(){
		CX=DSBYTE[BP];
		$CMP CL,0
		$JE FINISH
		AX=CX-32*5+#font_5x5;
		SI><AX;
		AH=5;
		loop(AH){
			$LODSB
			CL=BL;
			$TEST AL,16
			$JZ DOWN16
			CL=BH;
DOWN16:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,8
			$JZ DOWN8
			CL=BH;
DOWN8:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,4
			$JZ DOWN4
			CL=BH;
DOWN4:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,2
			$JZ DOWN2
			CL=BH;
DOWN2:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,1
			$JZ DOWN1
			CL=BH;
DOWN1:
			ESBYTE[DI]=CL;
			DI++;
			ESBYTE[DI]=BL;
			DI+=320-5;
		}
		DI-=320*5-5-1;   // the -1 is for one pixel spacing
		BP++;
	}
FINISH:
	$POP BP
}

:void put5x5str19(word x,y,straddr;byte fgcolor,bgcolor)
{
	ES=0xA000;
	AX=y*320+x;
	DI><AX;
	BH=fgcolor;
	BL=bgcolor;
	$PUSH BP
	BP=straddr;
	loop(){
		CX=DSBYTE[BP];
		$CMP CL,0
		$JE FINISH
		AX=CX-32*5+#font_5x5;
		SI><AX;
		AH=5;
		loop(AH){
			$LODSB
			CL=BL;
			$TEST AL,16
			$JZ DOWN16
			CL=BH;
DOWN16:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,8
			$JZ DOWN8
			CL=BH;
DOWN8:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,4
			$JZ DOWN4
			CL=BH;
DOWN4:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,2
			$JZ DOWN2
			CL=BH;
DOWN2:
			ESBYTE[DI]=CL;
			DI++;
			CL=BL;
			$TEST AL,1
			$JZ DOWN1
			CL=BH;
DOWN1:
			ESBYTE[DI]=CL;
			DI++;
			ESBYTE[DI]=BL;
			DI+=320-5;
		}
		DI-=320*5-5-1;   // the -1 is for one pixel spacing
		BP++;
	}
FINISH:
	$POP BP
}

:void _over5x5str19(word x,y,straddr;byte color)
{
	AX=y*320+x;
	DI><AX;
	BH=color;
	$PUSH BP
	BP=straddr;
	loop(){
		CX=DSBYTE[BP];
		$CMP CL,0
		$JE FINISH
		AX=CX-32*5+#font_5x5;
		SI><AX;
		AH=5;
		loop(AH){
			$LODSB
			$TEST AL,16
			$JZ DOWN16
			ESBYTE[DI]=BH;
DOWN16:
			DI++;
			$TEST AL,8
			$JZ DOWN8
			ESBYTE[DI]=BH;
DOWN8:
			DI++;
			$TEST AL,4
			$JZ DOWN4
			ESBYTE[DI]=BH;
DOWN4:
			DI++;
			$TEST AL,2
			$JZ DOWN2
			ESBYTE[DI]=BH;
DOWN2:
			DI++;
			$TEST AL,1
			$JZ DOWN1
			ESBYTE[DI]=BH;
DOWN1:
			DI+=320-4;
		}
		DI-=320*5-5-1;   // the -1 is for one pixel spacing
		BP++;
	}
FINISH:
	$POP BP
}

:void over5x5str19(word x,y,straddr;byte color)
{
	ES=0xA000;
	AX=y*320+x;
	DI><AX;
	BH=color;
	$PUSH BP
	BP=straddr;
	loop(){
		CX=DSBYTE[BP];
		$CMP CL,0
		$JE FINISH
		AX=CX-32*5+#font_5x5;
		SI><AX;
		AH=5;
		loop(AH){
			$LODSB
			$TEST AL,16
			$JZ DOWN16
			ESBYTE[DI]=BH;
DOWN16:
			DI++;
			$TEST AL,8
			$JZ DOWN8
			ESBYTE[DI]=BH;
DOWN8:
			DI++;
			$TEST AL,4
			$JZ DOWN4
			ESBYTE[DI]=BH;
DOWN4:
			DI++;
			$TEST AL,2
			$JZ DOWN2
			ESBYTE[DI]=BH;
DOWN2:
			DI++;
			$TEST AL,1
			$JZ DOWN1
			ESBYTE[DI]=BH;
DOWN1:
			DI+=320-4;
		}
		DI-=320*5-5-1;   // the -1 is for one pixel spacing
		BP++;
	}
FINISH:
	$POP BP
}

?endif
/* end of VGAFONT.H-- */

// ------------------------------------------------------------------- //
//        ADVAPI.H-- для Sphinx C-- (ADVAPI32.DLL)                     //
//        Основан на WINNT.H и WINREG.H из C++ Builder                 //
//        Предложения и плевки отправляйте на hd_keeper@mail.ru        //
// ------------------------------------------------------------------- //

// Описание констант

////////////////////////////////////////////////////////////////////////
//                                                                    //
//               NT Defined Privileges                                //
//                                                                    //
////////////////////////////////////////////////////////////////////////

#define SE_CREATE_TOKEN_NAME              "SeCreateTokenPrivilege"
#define SE_ASSIGNPRIMARYTOKEN_NAME        "SeAssignPrimaryTokenPrivilege"
#define SE_LOCK_MEMORY_NAME               "SeLockMemoryPrivilege"
#define SE_INCREASE_QUOTA_NAME            "SeIncreaseQuotaPrivilege"
#define SE_UNSOLICITED_INPUT_NAME         "SeUnsolicitedInputPrivilege"
#define SE_MACHINE_ACCOUNT_NAME           "SeMachineAccountPrivilege"
#define SE_TCB_NAME                       "SeTcbPrivilege"
#define SE_SECURITY_NAME                  "SeSecurityPrivilege"
#define SE_TAKE_OWNERSHIP_NAME            "SeTakeOwnershipPrivilege"
#define SE_LOAD_DRIVER_NAME               "SeLoadDriverPrivilege"
#define SE_SYSTEM_PROFILE_NAME            "SeSystemProfilePrivilege"
#define SE_SYSTEMTIME_NAME                "SeSystemtimePrivilege"
#define SE_PROF_SINGLE_PROCESS_NAME       "SeProfileSingleProcessPrivilege"
#define SE_INC_BASE_PRIORITY_NAME         "SeIncreaseBasePriorityPrivilege"
#define SE_CREATE_PAGEFILE_NAME           "SeCreatePagefilePrivilege"
#define SE_CREATE_PERMANENT_NAME          "SeCreatePermanentPrivilege"
#define SE_BACKUP_NAME                    "SeBackupPrivilege"
#define SE_RESTORE_NAME                   "SeRestorePrivilege"
#define SE_SHUTDOWN_NAME                  "SeShutdownPrivilege"
#define SE_DEBUG_NAME                     "SeDebugPrivilege"
#define SE_AUDIT_NAME                     "SeAuditPrivilege"
#define SE_SYSTEM_ENVIRONMENT_NAME        "SeSystemEnvironmentPrivilege"
#define SE_CHANGE_NOTIFY_NAME             "SeChangeNotifyPrivilege"
#define SE_REMOTE_SHUTDOWN_NAME           "SeRemoteShutdownPrivilege"

#define GENERIC_READ              0x80000000
#define GENERIC_WRITE             0x40000000
#define GENERIC_EXECUTE           0x20000000
#define GENERIC_ALL               0x10000000

#define HKEY_CLASSES_ROOT         0x80000000
#define HKEY_CURRENT_USER         0x80000001
#define HKEY_LOCAL_MACHINE        0x80000002
#define HKEY_USERS                0x80000003
#define HKEY_PERFORMANCE_DATA     0x80000004
#define HKEY_CURRENT_CONFIG       0x80000005
#define HKEY_DYN_DATA             0x80000006

#define KEY_QUERY_VALUE           0x0001
#define KEY_SET_VALUE             0x0002
#define KEY_CREATE_SUB_KEY        0x0004
#define KEY_ENUMERATE_SUB_KEYS    0x0008
#define KEY_NOTIFY                0x0010
#define KEY_CREATE_LINK           0x0020
#define KEY_READ                  STANDARD_RIGHTS_READ|KEY_QUERY_VALUE|KEY_ENUMERATE_SUB_KEYS|KEY_NOTIFY
#define KEY_WRITE                 STANDARD_RIGHTS_WRITE|KEY_SET_VALUE|KEY_CREATE_SUB_KEY
#define KEY_EXECUTE               KEY_READ
#define KEY_ALL_ACCESS            STANDARD_RIGHTS_ALL|KEY_QUERY_VALUE|KEY_SET_VALUE|KEY_CREATE_SUB_KEY|KEY_ENUMERATE_SUB_KEYS|KEY_NOTIFY|KEY_CREATE_LINK

#define REG_OPTION_RESERVED         0x00000000
#define REG_OPTION_NON_VOLATILE     0x00000000
#define REG_OPTION_VOLATILE         0x00000001
#define REG_OPTION_CREATE_LINK      0x00000002
#define REG_OPTION_BACKUP_RESTORE   0x00000004
#define REG_OPTION_OPEN_LINK        0x00000008
#define REG_LEGAL_OPTION            REG_OPTION_RESERVED|REG_OPTION_NON_VOLATILE|REG_OPTION_VOLATILE|REG_OPTION_CREATE_LINK|REG_OPTION_BACKUP_RESTORE|REG_OPTION_OPEN_LINK
#define REG_CREATED_NEW_KEY         0x00000001
#define REG_OPENED_EXISTING_KEY     0x00000002
#define REG_WHOLE_HIVE_VOLATILE     0x00000001
#define REG_REFRESH_HIVE            0x00000002
#define REG_NO_LAZY_FLUSH           0x00000004
#define REG_NOTIFY_CHANGE_NAME      0x00000001
#define REG_NOTIFY_CHANGE_ATTRIBUTES 0x00000002
#define REG_NOTIFY_CHANGE_LAST_SET  0x00000004
#define REG_NOTIFY_CHANGE_SECURITY  0x00000008
#define REG_LEGAL_CHANGE_FILTER     REG_NOTIFY_CHANGE_NAME|REG_NOTIFY_CHANGE_ATTRIBUTES|REG_NOTIFY_CHANGE_LAST_SET|REG_NOTIFY_CHANGE_SECURITY

#define REG_NONE                        0
#define REG_SZ                          1
#define REG_EXPAND_SZ                   2
#define REG_BINARY                      3
#define REG_DWORD                       4
#define REG_DWORD_LITTLE_ENDIAN         4
#define REG_DWORD_BIG_ENDIAN            5
#define REG_LINK                        6
#define REG_MULTI_SZ                    7
#define REG_RESOURCE_LIST               8
#define REG_FULL_RESOURCE_DESCRIPTOR    9
#define REG_RESOURCE_REQUIREMENTS_LIST 10

#define SID_REVISION                     1
#define SID_MAX_SUB_AUTHORITIES          15
#define SID_RECOMMENDED_SUB_AUTHORITIES  1

#define SECURITY_NULL_RID                  0x00000000
#define SECURITY_WORLD_RID                 0x00000000
#define SECURITY_LOCAL_RID                 0X00000000
#define SECURITY_CREATOR_OWNER_RID         0x00000000
#define SECURITY_CREATOR_GROUP_RID         0x00000001
#define SECURITY_CREATOR_OWNER_SERVER_RID  0x00000002
#define SECURITY_CREATOR_GROUP_SERVER_RID  0x00000003
#define SECURITY_DIALUP_RID                0x00000001
#define SECURITY_NETWORK_RID               0x00000002
#define SECURITY_BATCH_RID                 0x00000003
#define SECURITY_INTERACTIVE_RID           0x00000004
#define SECURITY_SERVICE_RID               0x00000006
#define SECURITY_ANONYMOUS_LOGON_RID       0x00000007
#define SECURITY_PROXY_RID                 0x00000008
#define SECURITY_SERVER_LOGON_RID          0x00000009
#define SECURITY_PRINCIPAL_SELF_RID        0x0000000A
#define SECURITY_AUTHENTICATED_USER_RID    0x0000000B
#define SECURITY_RESTRICTED_CODE_RID       0x0000000C
#define SECURITY_LOGON_IDS_RID             0x00000005
#define SECURITY_LOGON_IDS_RID_COUNT       0x00000003
#define SECURITY_LOCAL_SYSTEM_RID          0x00000012
#define SECURITY_NT_NON_UNIQUE             0x00000015
#define SECURITY_BUILTIN_DOMAIN_RID        0x00000020

#define DOMAIN_USER_RID_ADMIN          0x000001F4
#define DOMAIN_USER_RID_GUEST          0x000001F5
#define DOMAIN_USER_RID_KRBTGT         0x000001F6
#define DOMAIN_GROUP_RID_ADMINS        0x00000200
#define DOMAIN_GROUP_RID_USERS         0x00000201
#define DOMAIN_GROUP_RID_GUESTS        0x00000202
#define DOMAIN_ALIAS_RID_ADMINS        0x00000220
#define DOMAIN_ALIAS_RID_USERS         0x00000221
#define DOMAIN_ALIAS_RID_GUESTS        0x00000222
#define DOMAIN_ALIAS_RID_POWER_USERS   0x00000223
#define DOMAIN_ALIAS_RID_ACCOUNT_OPS   0x00000224
#define DOMAIN_ALIAS_RID_SYSTEM_OPS    0x00000225
#define DOMAIN_ALIAS_RID_PRINT_OPS     0x00000226
#define DOMAIN_ALIAS_RID_BACKUP_OPS    0x00000227
#define DOMAIN_ALIAS_RID_REPLICATOR    0x00000228

#define SE_GROUP_MANDATORY             0x00000001
#define SE_GROUP_ENABLED_BY_DEFAULT    0x00000002
#define SE_GROUP_ENABLED               0x00000004
#define SE_GROUP_OWNER                 0x00000008
#define SE_GROUP_USE_FOR_DENY_ONLY     0x00000010
#define SE_GROUP_LOGON_ID              0xC0000000

#define ACL_REVISION      2
#define ACL_REVISION_DS   4
#define ACL_REVISION1     1
#define ACL_REVISION2     2
#define ACL_REVISION3     3
#define ACL_REVISION4     4
#define MAX_ACL_REVISION  ACL_REVISION4
#define MIN_ACL_REVISION  ACL_REVISION2

#define ACCESS_MIN_MS_ACE_TYPE                  0x0
#define ACCESS_ALLOWED_ACE_TYPE                 0x0
#define ACCESS_DENIED_ACE_TYPE                  0x1
#define SYSTEM_AUDIT_ACE_TYPE                   0x2
#define SYSTEM_ALARM_ACE_TYPE                   0x3
#define ACCESS_MAX_MS_V2_ACE_TYPE               0x3
#define ACCESS_ALLOWED_COMPOUND_ACE_TYPE        0x4
#define ACCESS_MAX_MS_V3_ACE_TYPE               0x4
#define ACCESS_MIN_MS_OBJECT_ACE_TYPE           0x5
#define ACCESS_ALLOWED_OBJECT_ACE_TYPE          0x5
#define ACCESS_DENIED_OBJECT_ACE_TYPE           0x6
#define SYSTEM_AUDIT_OBJECT_ACE_TYPE            0x7
#define SYSTEM_ALARM_OBJECT_ACE_TYPE            0x8
#define ACCESS_MAX_MS_OBJECT_ACE_TYPE           0x8
#define ACCESS_MAX_MS_V4_ACE_TYPE               0x8
#define ACCESS_MAX_MS_ACE_TYPE                  0x8

#define OBJECT_INHERIT_ACE                0x01
#define CONTAINER_INHERIT_ACE             0x02
#define NO_PROPAGATE_INHERIT_ACE          0x04
#define INHERIT_ONLY_ACE                  0x08
#define INHERITED_ACE                     0x10
#define VALID_INHERIT_FLAGS               0x1F
#define SUCCESSFUL_ACCESS_ACE_FLAG        0x40
#define FAILED_ACCESS_ACE_FLAG            0x80

#define ACE_OBJECT_TYPE_PRESENT            1
#define ACE_INHER_OBJECT_TYPE_PRESENT      2
#define SECURITY_DESCRIPTOR_REVISION       1
#define SECURITY_DESCRIPTOR_REVISION1      1
#define SECURITY_DESCRIPTOR_MIN_LENGTH    20

#define SE_OWNER_DEFAULTED                0x0001
#define SE_GROUP_DEFAULTED                0x0002
#define SE_DACL_PRESENT                   0x0004
#define SE_DACL_DEFAULTED                 0x0008
#define SE_SACL_PRESENT                   0x0010
#define SE_SACL_DEFAULTED                 0x0020
#define SE_DACL_AUTO_INHERIT_REQ          0x0100
#define SE_SACL_AUTO_INHERIT_REQ          0x0200
#define SE_DACL_AUTO_INHERITED            0x0400
#define SE_SACL_AUTO_INHERITED            0x0800
#define SE_DACL_PROTECTED                 0x1000
#define SE_SACL_PROTECTED                 0x2000
#define SE_SELF_RELATIVE                  0x8000

#define ACCESS_OBJECT_GUID       0
#define ACCESS_PROPERTY_SET_GUID 1
#define ACCESS_PROPERTY_GUID     2
#define ACCESS_MAX_LEVEL         4
#define AUDIT_ALLOW_NO_PRIVILEGE 1

#define PRIVILEGE_SET_ALL_NECESSARY      0x00000001
#define SE_PRIVILEGE_ENABLED_BY_DEFAULT  0x00000001
#define SE_PRIVILEGE_ENABLED             0x00000002
#define SE_PRIVILEGE_USED_FOR_ACCESS     0x80000000

#define TOKEN_ASSIGN_PRIMARY     0x0001
#define TOKEN_DUPLICATE          0x0002
#define TOKEN_IMPERSONATE        0x0004
#define TOKEN_QUERY              0x0008
#define TOKEN_QUERY_SOURCE       0x0010
#define TOKEN_ADJUST_PRIVILEGES  0x0020
#define TOKEN_ADJUST_GROUPS      0x0040
#define TOKEN_ADJUST_DEFAULT     0x0080
#define TOKEN_ALL_ACCESS         STANDARD_RIGHTS_REQUIRED|TOKEN_ASSIGN_PRIMARY|TOKEN_DUPLICATE|TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_QUERY_SOURCE|TOKEN_ADJUST_PRIVILEGES|TOKEN_ADJUST_GROUPS|TOKEN_ADJUST_DEFAULT
#define TOKEN_READ               STANDARD_RIGHTS_READ|TOKEN_QUERY
#define TOKEN_WRITE              STANDARD_RIGHTS_WRITE|TOKEN_ADJUST_PRIVILEGES|TOKEN_ADJUST_GROUPS|TOKEN_ADJUST_DEFAULT
#define TOKEN_EXECUTE            STANDARD_RIGHTS_EXECUTE

#define TOKEN_SOURCE_LENGTH  8
#define MAXIMUM_PROCESSORS  32

#define SECURITY_DYNAMIC_TRACKING      TRUE
#define SECURITY_STATIC_TRACKING       FALSE

#define OWNER_SECURITY_INFORMATION       0X00000001
#define GROUP_SECURITY_INFORMATION       0X00000002
#define DACL_SECURITY_INFORMATION        0X00000004
#define SACL_SECURITY_INFORMATION        0X00000008

#define MUTANT_QUERY_STATE      0x0001
#define EVENT_MODIFY_STATE      0x0002
#define SEMAPHORE_MODIFY_STATE  0x0002
#define EVENT_ALL_ACCESS        STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|3
#define MUTANT_ALL_ACCESS       STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|MUTANT_QUERY_STATE
#define SEMAPHORE_ALL_ACCESS    STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3

#define TIME_ZONE_ID_UNKNOWN  0
#define TIME_ZONE_ID_STANDARD 1
#define TIME_ZONE_ID_DAYLIGHT 2

#define PROCESSOR_INTEL_386     386
#define PROCESSOR_INTEL_486     486
#define PROCESSOR_INTEL_PENTIUM 586
#define PROCESSOR_INTEL_860     860
#define PROCESSOR_MIPS_R2000    2000
#define PROCESSOR_MIPS_R3000    3000
#define PROCESSOR_MIPS_R4000    4000
#define PROCESSOR_ALPHA_21064   21064
#define PROCESSOR_PPC_601       601
#define PROCESSOR_PPC_603       603
#define PROCESSOR_PPC_604       604
#define PROCESSOR_PPC_620       620
#define PROCESSOR_HITACHI_SH3   10003
#define PROCESSOR_HITACHI_SH3E  10004
#define PROCESSOR_HITACHI_SH4   10005
#define PROCESSOR_MOTOROLA_821  821
#define PROCESSOR_SHx_SH3       103
#define PROCESSOR_SHx_SH4       104
#define PROCESSOR_STRONGARM     2577
#define PROCESSOR_ARM720        1824
#define PROCESSOR_ARM820        2080
#define PROCESSOR_ARM920        2336
#define PROCESSOR_ARM_7TDMI     70001

#define PROCESSOR_ARCHITECTURE_INTEL   0
#define PROCESSOR_ARCHITECTURE_MIPS    1
#define PROCESSOR_ARCHITECTURE_ALPHA   2
#define PROCESSOR_ARCHITECTURE_PPC     3
#define PROCESSOR_ARCHITECTURE_SHX     4
#define PROCESSOR_ARCHITECTURE_ARM     5
#define PROCESSOR_ARCHITECTURE_UNKNOWN 0xFFFF

#define PF_FLOATING_POINT_PRECISION_ERRATA  0
#define PF_FLOATING_POINT_EMULATED          1
#define PF_COMPARE_EXCHANGE_DOUBLE          2
#define PF_MMX_INSTRUCTIONS_AVAILABLE       3
#define PF_PPC_MOVEMEM_64BIT_OK             4
#define PF_ALPHA_BYTE_INSTRUCTIONS          5

// Описание структур

struct LUID {
  DWORD LowPart;
  LONG HighPart;
};

struct GUID {
  DWORD Data1;
  WORD Data2;
  WORD Data3;
  BYTE Data4[8];
};

struct OBJECTID {
  struct GUID Lineage;
  DWORD Uniquifier;
};

struct GENERIC_MAPPING {
  ACCESS_MASK GenericRead;
  ACCESS_MASK GenericWrite;
  ACCESS_MASK GenericExecute;
  ACCESS_MASK GenericAll;
};

struct LUID_AND_ATTRIBUTES {
  struct LUID Luid;
  DWORD Attributes;
};

struct SID_IDENTIFIER_AUTHORITY {
  BYTE Value[6];
};

struct SID {
  BYTE Revision;
  BYTE SubAuthorityCount;
  struct SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  DWORD SubAuthority[1];
};

struct SID_AND_ATTRIBUTES {
  LPVOID Sid;
  DWORD Attributes;
};

struct ACL {
  BYTE AclRevision;
  BYTE Sbz1;
  WORD AclSize;
  WORD AceCount;
  WORD Sbz2;
};

struct ACE_HEADER {
  BYTE AceType;
  BYTE AceFlags;
  WORD AceSize;
};

struct ACE {
  struct ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD SidStart;
};

struct OBJECT_ACE {
  struct ACE_HEADER Header;
  ACCESS_MASK Mask;
  DWORD Flags;
  struct GUID ObjectType;
  struct GUID InheritedObjectType;
  DWORD SidStart;
};

struct ACL_REVISION_INFORMATION {
  DWORD AclRevision;
};

struct ACL_SIZE_INFORMATION {
  DWORD AceCount;
  DWORD AclBytesInUse;
  DWORD AclBytesFree;
};

struct SECURITY_DESCRIPTOR {
  BYTE Revision;
  BYTE Sbz1;
  WORD Control;
  LPVOID Owner;
  LPVOID Group;
  LPVOID Sacl;
  LPVOID Dacl;
};

struct OBJECT_TYPE_LIST {
  WORD Level;
  WORD Sbz;
  LPVOID ObjectType;
};

struct PRIVILEGE_SET {
  DWORD PrivilegeCount;
  DWORD Control;
  struct LUID_AND_ATTRIBUTES Privilege[1];
};

struct TOKEN_USER {
  struct SID_AND_ATTRIBUTES User;
};

struct TOKEN_GROUPS {
  DWORD GroupCount;
  struct SID_AND_ATTRIBUTES Groups[1];
};

struct TOKEN_PRIVILEGES {
  DWORD PrivilegeCount;
  struct LUID_AND_ATTRIBUTES Privileges[1];
};

struct TOKEN_OWNER {
  LPVOID Owner;
};

struct TOKEN_PRIMARY_GROUP {
  LPVOID PrimaryGroup;
};

struct TOKEN_DEFAULT_DACL {
  LPVOID DefaultDacl;
};

struct TOKEN_SOURCE {
  CHAR SourceName[ TOKEN_SOURCE_LENGTH];
  struct LUID SourceIdentifier;
};

struct TOKEN_STATISTICS {
  struct LUID TokenId;
  struct LUID AuthenticationId;
  struct LARGE_INTEGER ExpirationTime;
  INT TokenType;
  INT ImpersonationLevel;
  DWORD DynamicCharged;
  DWORD DynamicAvailable;
  DWORD GroupCount;
  DWORD PrivilegeCount;
  struct LUID ModifiedId;
};

struct TOKEN_CONTROL {
  struct LUID TokenId;
  struct LUID AuthenticationId;
  struct LUID ModifiedId;
  struct TOKEN_SOURCE TokenSource;
};

struct SECURITY_QUALITY_OF_SERVICE {
  DWORD Length;
  INT ImpersonationLevel;
  INT ContextTrackingMode;
  BOOLEAN EffectiveOnly;
};

struct SE_IMPERSONATION_STATE {
  LPVOID Token;
  BOOLEAN CopyOnOpen;
  BOOLEAN EffectiveOnly;
  INT Level;
};

struct MEMORY_BASIC_INFORMATION {
  LPVOID BaseAddress;
  LPVOID AllocationBase;
  DWORD AllocationProtect;
  DWORD RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

enum {
  SidTypeUser = 1,
  SidTypeGroup,
  SidTypeDomain,
  SidTypeAlias,
  SidTypeWellKnownGroup,
  SidTypeDeletedAccount,
  SidTypeInvalid,
  SidTypeUnknown
};

enum {
  AclRevisionInformation = 1,
  AclSizeInformation
};

enum {
  AuditEventObjectAccess,
  AuditEventDirectoryServiceAccess
};

enum {
  SecurityAnonymous,
  SecurityIdentification,
  SecurityImpersonation,
  SecurityDelegation
};

enum {
  TokenPrimary = 1,
  TokenImpersonation
};

enum {
  TokenUser = 1,
  TokenGroups,
  TokenPrivileges,
  TokenOwner,
  TokenPrimaryGroup,
  TokenDefaultDacl,
  TokenSource,
  TokenType,
  TokenImpersonationLevel,
  TokenStatistics,
  TokenRestrictedSids
};

#define ACCESS_ALLOWED_ACE  ACE
#define ACCESS_DENIED_ACE   ACE
#define SYSTEM_AUDIT_ACE    ACE
#define SYSTEM_ALARM_ACE    ACE

#define ACCESS_ALLOWED_OBJECT_ACE  OBJECT_ACE
#define ACCESS_DENIED_OBJECT_ACE   OBJECT_ACE
#define SYSTEM_AUDIT_OBJECT_ACE    OBJECT_ACE
#define SYSTEM_ALARM_OBJECT_ACE    OBJECT_ACE

// Импорт функций

extern WINAPI "advapi32.dll"
{
  AbortSystemShutdownA();
  AccessCheck();
  AccessCheckAndAuditAlarmA();
  AddAccessAllowedAce();
  AddAccessDeniedAce();
  AddAce();
  AddAuditAccessAce();
  AdjustTokenGroups();
	BOOL AdjustTokenPrivileges(HANDLE TokenHandle,BOOL DisableAllPrivileges,
		dword NewState,dword BufferLength,dword PreviousState,dword ReturnLength);
  AllocateAndInitializeSid();
  AllocateLocallyUniqueId();
  AreAllAccessesGranted();
  AreAnyAccessesGranted();
  BackupEventLogA();
  ClearEventLogA();
  CloseEventLog();
  CopySid();
  CreatePrivateObjectSecurity();
  CreateProcessAsUserA();
  DeleteAce();
  DeregisterEventSource();
  DestroyPrivateObjectSecurity();
  DuplicateToken();
  DuplicateTokenEx();
  EqualPrefixSid();
  EqualSid();
  FindFirstFreeAce();
  FreeSid();
  GetAce();
  GetAclInformation();
  GetCurrentHwProfileA();
  GetFileSecurityA();
  GetKernelObjectSecurity();
  GetLengthSid();
  GetNumberOfEventLogRecords();
  GetOldestEventLogRecord();
  GetPrivateObjectSecurity();
  GetSecurityDescriptorControl();
  GetSecurityDescriptorDacl();
  GetSecurityDescriptorGroup();
  GetSecurityDescriptorLength();
  GetSecurityDescriptorOwner();
  GetSecurityDescriptorSacl();
  GetSidIdentifierAuthority();
  GetSidLengthRequired();
  GetSidSubAuthority();
  GetSidSubAuthorityCount();
  GetTokenInformation();
  GetUserNameA();
  ImpersonateLoggedOnUser();
  ImpersonateNamedPipeClient();
  ImpersonateSelf();
  InitializeAcl();
  InitializeSecurityDescriptor();
  InitializeSid();
  InitiateSystemShutdownA();
  IsTextUnicode();
  IsValidAcl();
  IsValidSecurityDescriptor();
  IsValidSid();
  LogonUserA();
  LookupAccountNameA();
  LookupAccountSidA();
  LookupPrivilegeDisplayNameA();
  LookupPrivilegeNameA();
	BOOL LookupPrivilegeValueA(dword lpSystemName,dword lpName, dword lpLuid);
  MakeAbsoluteSD();
  MakeSelfRelativeSD();
  MapGenericMask();
  NotifyChangeEventLog();
  ObjectCloseAuditAlarmA();
  ObjectDeleteAuditAlarmA();
  ObjectOpenAuditAlarmA();
  ObjectPrivilegeAuditAlarmA();
  OpenBackupEventLogA();
  OpenEventLogA();
	BOOL OpenProcessToken(HANDLE ProcessHandle,dword DesiredAccess,dword TokenHandle);
  OpenThreadToken();
  PrivilegeCheck();
  PrivilegedServiceAuditAlarmA();
  ReadEventLogA();
  RegCloseKey();
  RegConnectRegistryA();
  RegCreateKeyA();
  RegCreateKeyExA();
  RegDeleteKeyA();
  RegDeleteValueA();
  RegEnumKeyExA();
  RegEnumKeyA();
  RegEnumValueA();
  RegFlushKey();
  RegGetKeySecurity();
  RegLoadKeyA();
  RegNotifyChangeKeyValue();
  RegOpenKeyA();
  RegOpenKeyExA();
  RegQueryInfoKeyA();
  RegQueryMultipleValuesA();
  RegQueryValueA();
  RegQueryValueExA();
  RegReplaceKeyA();
  RegRestoreKeyA();
  RegSaveKeyA();
  RegSetKeySecurity();
  RegSetValueA();
  RegSetValueExA();
  RegUnLoadKeyA();
  RegisterEventSourceA();
  ReportEventA();
  RevertToSelf();
  SetAclInformation();
  SetFileSecurityA();
  SetKernelObjectSecurity();
  SetPrivateObjectSecurity();
  SetSecurityDescriptorDacl();
  SetSecurityDescriptorGroup();
  SetSecurityDescriptorOwner();
  SetSecurityDescriptorSacl();
  SetThreadToken();
}

#define AbortSystemShutdown AbortSystemShutdownA
#define AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmA
#define BackupEventLog BackupEventLogA
#define ClearEventLog ClearEventLogA
#define CreateProcessAsUser CreateProcessAsUserA
#define GetCurrentHwProfile GetCurrentHwProfileA
#define GetFileSecurity GetFileSecurityA
#define GetUserName GetUserNameA
#define InitiateSystemShutdown InitiateSystemShutdownA
#define LogonUser LogonUserA
#define LookupAccountName LookupAccountNameA
#define LookupAccountSid LookupAccountSidA
#define LookupPrivilegeDisplayName LookupPrivilegeDisplayNameA
#define LookupPrivilegeName LookupPrivilegeNameA
#define LookupPrivilegeValue LookupPrivilegeValueA
#define ObjectCloseAuditAlarm ObjectCloseAuditAlarmA
#define ObjectDeleteAuditAlarm ObjectDeleteAuditAlarmA
#define ObjectOpenAuditAlarm ObjectOpenAuditAlarmA
#define ObjectPrivilegeAuditAlarm ObjectPrivilegeAuditAlarmA
#define OpenBackupEventLog OpenBackupEventLogA
#define OpenEventLog OpenEventLogA
#define PrivilegedServiceAuditAlarm PrivilegedServiceAuditAlarmA
#define ReadEventLog ReadEventLogA
#define RegConnectRegistry RegConnectRegistryA
#define RegCreateKey RegCreateKeyA
#define RegCreateKeyEx RegCreateKeyExA
#define RegDeleteKey RegDeleteKeyA
#define RegDeleteValue RegDeleteValueA
#define RegEnumKeyEx RegEnumKeyExA
#define RegEnumKey RegEnumKeyA
#define RegEnumValue RegEnumValueA
#define RegLoadKey RegLoadKeyA
#define RegOpenKey RegOpenKeyA
#define RegOpenKeyEx RegOpenKeyExA
#define RegQueryInfoKey RegQueryInfoKeyA
#define RegQueryMultipleValues RegQueryMultipleValuesA
#define RegQueryValue RegQueryValueA
#define RegQueryValueEx RegQueryValueExA
#define RegReplaceKey RegReplaceKeyA
#define RegRestoreKey RegRestoreKeyA
#define RegSaveKey RegSaveKeyA
#define RegSetValue RegSetValueA
#define RegSetValueEx RegSetValueExA
#define RegUnLoadKey RegUnLoadKeyA
#define RegisterEventSource RegisterEventSourceA
#define ReportEvent ReportEventA
#define SetFileSecurity SetFileSecurityA

